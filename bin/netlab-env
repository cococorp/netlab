#!/usr/bin/env python

import os
import logging
import argparse
import json
from pystache.renderer import Renderer
from netlab.utils import JsonLoader
from netlab.model import Document

def run(netfile):
	#renderer = Renderer(search_dirs=[opts.dir, opts.tdir])
	loader = JsonLoader()
	data = loader.load(netfile)
	
	doc = Document(data)
	import pprint
	pprint.pprint(doc)
	
	#os.execlp('bash', 'bash')
	
	for bridge in doc.bridges.values():
		os.system('ip link add net-%s type bridge' % bridge.name)
		os.system('ip link set dev net-%s up' % bridge.name)
		for port in bridge.ports:
			os.system('ip link add link net-%s tap-%s type macvlan mode vepa' % (bridge.name, '1'))
			os.system('ip link set dev tap-%s up' % '1')
	
	os.system('ifconfig')
	os.system('ip -d link')
	os.system('brctl show')

def main():
	parser = argparse.ArgumentParser(description='netlab')
	parser.add_argument('-f', '--file', metavar='FILE',
						help='use specified JSON network description')
	
	args = parser.parse_args()
	if not args.file:
		parser.error('-f is required')
	if not os.path.exists(args.file):
		parser.error('-f must point to a valid netfile')
	
	run(args.file)

if __name__ == '__main__':
	try:
		main()
	finally:
		logging.shutdown()

